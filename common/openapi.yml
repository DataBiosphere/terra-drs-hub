openapi: 3.0.3
info:
  title: drsHub
  version: 2.0.0
paths:
  /api/v4/drs/resolve:
    post:
      summary: Get a file
      tags: [ drsHub ]
      operationId: resolveDrs
      parameters:
        - in: header
          name: X-Forwarded-For
          schema:
            type: string
            required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestObject'
      responses:
        '200':
          $ref: '#/components/responses/ResourceResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/v4/gcs/getSignedUrl:
    post:
      summary: Get a signed URL for a GCS Object, signed the caller's fence service account.
        The signed URL is active for 1 hour.
        The bucket and object in the request body are optional, but providing them allows DRSHub to bypass the
        DRS object resolution and to just sign the URL using the fence account associated with the DRS Provider
        in the dataObjectUri.
      tags: [ gcs ]
      operationId: getSignedUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSignedUrlRequest'
      responses:
        '200':
          description: A signed url to access to object in GCS
          content:
            application/json:
              schema:
                type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /status:
    get:
      summary: Check status of the service.
      tags: [ public ]
      operationId: getStatus
      security: [ ]
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/SystemStatusResponse'
  /version:
    get:
      summary: Get version info of the deployed service.
      tags: [ public ]
      operationId: getVersion
      security: [ ]
      responses:
        '200':
          description: Version information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionProperties'
        '404':
          description: "Version not configured"
        '500':
          $ref: '#/components/responses/ServerError'


components:
  responses:
    ResourceResponse:
      description: Information about the requested file
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceMetadata'

    # Error Responses
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    PermissionDenied:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    NotFound:
      description: Not found (or unauthorized)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    SystemStatusResponse:
      description: System status check failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

  schemas:
    ResourceMetadata:
      type: object
      properties:
        contentType:
          type: string
        size:
          type: integer
          format: int64
        timeCreated:
          type: string
          format: date-time
        timeUpdated:
          type: string
          format: date-time
        bucket:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        gsUri:
          type: string
          nullable: true
        googleServiceAccount:
            $ref: '#/components/schemas/SaKeyObject'
        fileName:
          type: string
          nullable: true
        accessUrl:
          $ref: '#/components/schemas/AccessUrl'
        hashes:
          type: object
          description: Hashing algorithm name (lowercase) to hex encoded hash.
          additionalProperties:
            type: string
        localizationPath:
          type: string
          nullable: true
        bondProvider:
          type: string
          nullable: true

    SaKeyObject:
      required: [ data ]
      type: object
      nullable: true
      properties:
        data:
          description: The actual SA key.
          type: object
          additionalProperties: true

    AccessUrl:
      type: object
      nullable: true
      properties:
        url:
          type: string
        headers:
          type: object
          additionalProperties:
            type: string

    RequestObject:
      type: object
      required: [url]
      properties:
        url:
          description: The DRS URL to resolve
          type: string
        cloudPlatform:
          description: Which cloud platform to prefer when resolving a DRS URL (options include "gs", "azure", and "s3").
           If an access url does not exist in that cloud platform, an alternative will be returned if one exists. If
           this field is not specified, the first access url found will be returned.
          type: string
          nullable: true
          enum: [azure, gs, s3]
        fields:
          description: Which information to include about the Drs Object. By default the response includes
           bucket, contentType, fileName, gsUri, hashes, localizationPath, name, size, timeCreated, timeUpdated
           and googleServiceAccount. The accessUrl and bondProvider will only be included if specified.
          type: array
          items:
            type: string

    GetSignedUrlRequest:
      type: object
      required:
        - dataObjectUri
        - googleProject
      properties:
        bucket:
          type: string
        object:
          type: string
        dataObjectUri:
          type: string
        googleProject:
          type: string


    ErrorReport:
      type: object
      required: [ message, statusCode ]
      properties:
        message:
          type: string
        statusCode:
          type: integer

    VersionProperties:
      type: object
      properties:
        gitTag:
          type: string
        gitHash:
          type: string
        github:
          type: string
        build:
          type: string

  securitySchemes:
    authorization:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
    bearerAuth:
      type: http
      scheme: bearer


security:
  - authorization: [ openid, email, profile ]
  - bearerAuth: [ ]
