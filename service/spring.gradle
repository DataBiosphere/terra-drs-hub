configurations { compileOnly { extendsFrom annotationProcessor } }

var springBootVersion = '2.7.4'

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
	developmentOnly "org.springframework.boot:spring-boot-devtools:$springBootVersion"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
	testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"

	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'org.apache.commons:commons-collections4:4.4'

	// allows mocking final classes
	testImplementation 'org.mockito:mockito-inline:5.2.0'
}

test {
	useJUnitPlatform()
	filter {
		excludeTestsMatching "*VerifyPacts*"
	}
}

task verifyPacts( type: Test ) {
	useJUnitPlatform()
	systemProperty 'pact.provider.version', System.getenv('PACT_PROVIDER_COMMIT')
	systemProperty 'pact.provider.branch',  System.getenv('PACT_PROVIDER_BRANCH')
	systemProperty 'pact.verifier.publishResults', true
	systemProperty 'pactbroker.host', System.getenv('PACT_BROKER_URL')
	systemProperty 'pactbroker.auth.username', System.getenv('PACT_BROKER_USERNAME')
	systemProperty 'pactbroker.auth.password', System.getenv('PACT_BROKER_PASSWORD')

	filter {
		includeTestsMatching "*VerifyPacts*"
	}
}

task bootRunDev {
	bootRun.configure { systemProperty 'spring.profiles.active', 'human-readable-logging' }
	finalizedBy(bootRun)
}


