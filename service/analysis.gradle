jacocoTestReport {
	reports {
		html.required = true
		xml.required = true
	}

	dependsOn test

	// https://www.baeldung.com/jacoco-report-exclude#2-gradle-configuration
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['bio/terra/drshub/generated/**'])
		}))
	}
}

spotbugs {
	reportLevel = 'high'
	effort = 'max'
	reportsDir = file("${project.reporting.baseDir}/spotbugs")
	excludeFilter = file('../spotbugsExclude.xml')
}

spotbugsMain {
	reports {
		sarif { enabled = true }
	}
}

spotbugsTest { enabled = false }

task runMinnieKenny(type: Exec) {
	workingDir rootDir

	commandLine './minnie-kenny.sh'
}

test {
	useJUnitPlatform {
		includeTags 'Unit'
	}
	dependsOn runMinnieKenny
}

task verifyPacts(type: Test) {
	outputs.upToDateWhen { false } // always run this task even if it's up to date
	useJUnitPlatform {
		includeTags 'Pact'
	}
	testLogging {
		showStandardStreams = true
	}
	systemProperty 'pact.provider.version', System.getenv('PACT_PROVIDER_VERSION')
	systemProperty 'pact.provider.branch', System.getenv('PACT_PROVIDER_BRANCH')
	systemProperty 'pact.verifier.publishResults', true
	systemProperty 'pactbroker.host', System.getenv('PACT_BROKER_URL')
	systemProperty 'pactbroker.auth.username', System.getenv('PACT_BROKER_USERNAME')
	systemProperty 'pactbroker.auth.password', System.getenv('PACT_BROKER_PASSWORD')
	systemProperty 'pactbroker.scheme', 'https'
}

