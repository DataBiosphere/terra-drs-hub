deploy_env: ${DEPLOY_ENV:dev} # since there's a default, define this once

drshub:
  bardUrl: https://terra-bard-${deploy_env}.appspot.com
  samUrl: https://sam.dsde-${deploy_env}.broadinstitute.org
  externalcredsUrl: https://externalcreds.dsde-${deploy_env}.broadinstitute.org

  drsProviders:
    anvil:
      name: NHGRI Analysis Visualization and Informatics Lab-space (The AnVIL)
      hostRegex: '.*\.theanvil\.io'
      metadataAuth: false
      ecmFenceProvider: anvil
      accessMethodConfigs:
        - type: gs
          auth: fence_token
          fetchAccessUrl: false
    bioDataCatalyst:
      name: BioData Catalyst (BDC)
      hostRegex: '.*\.biodatacatalyst\.nhlbi\.nih\.gov|wb-mock-drs-dev\.storage\.googleapis\.com'
      metadataAuth: false
      ecmFenceProvider: fence
      accessMethodConfigs:
        - type: gs
          auth: fence_token
          fetchAccessUrl: true
    crdc:
      name: NCI Cancer Research / Proteomics Data Commons (CRDC / PDC)
      hostRegex: '.*\.datacommons\.io'
      metadataAuth: false
      ecmFenceProvider: dcf_fence
      accessMethodConfigs:
        - type: gs
          auth: fence_token
          fetchAccessUrl: true
        - type: s3
          auth: fence_token
          fetchAccessUrl: true
    kidsFirst:
      name: Gabriella Miller Kids First DRC
      hostRegex: '.*\.kidsfirstdrc\.org'
      metadataAuth: false
      ecmFenceProvider: kids_first
      accessMethodConfigs:
        - type: s3
          auth: fence_token
          fetchAccessUrl: true
    terraDataRepo:
      name: Terra Data Repo (TDR)
      hostRegex: '.*data.*[-.](?:broadinstitute\.org|terra\.bio)'
      metadataAuth: true
      useAliasesForLocalizationPath: true
      accessMethodConfigs:
        - type: gs
          auth: current_request
          fetchAccessUrl: true
        - type: https
          auth: current_request
          fetchAccessUrl: true # Used for Azure
  pencilsDownSeconds: 58
  asyncThreads: ${TOMCAT_MAX_THREADS:200}
  restTemplateConnectionPoolSize: ${REST_TEMPLATE_CONNECTION_POOL_SIZE:500}
  bardEventLoggingEnabled: ${BARD_EVENT_LOGGING_ENABLED:true}
  trackInMixpanel: false

management:
  # For Micrometer metrics gathering
  endpoints:
    web:
      exposure:
        # Expose all management endpoints in Spring Boot
        include: "*"
  metrics:
    distribution:
      # Used to publish a histogram suitable for computing aggregable (across dimensions) percentile
      # latency approximations in Prometheus (by using histogram_quantile)
      # For more information: https://micrometer.io/docs/concepts#_histograms_and_percentiles
      minimum-expected-value[http.server.requests]: 200ms
      maximum-expected-value[http.server.requests]: 60s
      percentiles-histogram[http.server.requests]: true
  server:
    # Expose metrics on a different port than our app so that they aren't exposed with other endpoints
    port: 9098

otel:
  sdk:
    disabled: false # set to true to disable all open telemetry features

  springboot:
    resource:
      attributes:
        service:
          name: ${spring.application.name}

server:
  max-http-request-header-size: 32KB
  compression:
    enabled: true
    mime-types: text/css,application/javascript
  port: 8080
  tomcat:
    # Tomcat defaults: https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#application-properties.server.server.tomcat.accept-count
    threads:
      max: ${TOMCAT_MAX_THREADS:200}
      min-spare: ${TOMCAT_MIN_SPARE_THREADS:10}
    accept-count: ${TOMCAT_ACCEPT_COUNT:100}

spring:
  application:
    name: drshub
    version: ${drshub.version.gitHash:unknown}

  config.import: classpath:rendered/version.properties

  jackson.serialization.indent_output: true

  main.banner-mode: off

  profiles.include:
    - ${DEPLOY_ENV:dev}

  web:
    resources:
      cache:
        cachecontrol:
          max-age: 0
          must-revalidate: true
        use-last-modified: false

terra.common:
  google:
    tracing:
      enabled: ${CLOUD_TRACE_ENABLED:false}
  tracing:
    samplingRatio: ${SAMPLING_PROBABILITY:0}

---
# not-prod
# we want this test passport provider in all non-prod envs
# TDR is the only host that has specific values for each lower env
spring.config.activate.on-profile: '!prod'
drshub:
  drsProviders:
    passport:
      name: Passport Test Provider
      hostRegex: 'ctds-test-env\.planx-pla\.net'
      metadataAuth: false
      ecmFenceProvider: dcf_fence
      accessMethodConfigs:
        - type: gs
          auth: passport
          fetchAccessUrl: true
          fallbackAuth: fence_token
        - type: s3
          auth: passport
          fetchAccessUrl: true
          fallbackAuth: fence_token
      mTlsConfig:
        keyPath: rendered/ras-mtls-client.key
        certPath: rendered/ras-mtls-client.crt
  signedUrlDuration: 1h
  compactIdHosts:
    "dg.712c": staging.gen3.biodatacatalyst.nhlbi.nih.gov # biodatacatalyst staging
    "dg.4dfc": nci-crdc-staging.datacommons.io # cancer research data commons
    "dg.f82a1a": gen3staging.kidsfirstdrc.org # kidsfirst
    "dg.test0": ctds-test-env.planx-pla.net # passport test
---
# prod
spring.config.activate.on-profile: prod
drshub:
  compactIdHosts:
    "dg.4503": gen3.biodatacatalyst.nhlbi.nih.gov # biodatacatalyst
    "dg.anv0": data.terra.bio # old anvil (hosted on TDR)
    "drs.anv0": data.terra.bio # new anvil (hosted on TDR)
    "dg.4dfc": nci-crdc.datacommons.io # cancer research data commons
    "dg.f82a1a": data.kidsfirstdrc.org # kidsfirst
---
# dev
spring.config.activate.on-profile: dev
drshub:
  compactIdHosts:
    "drs.anv0": jade.datarepo-dev.broadinstitute.org
    "dg.anv0": jade.datarepo-dev.broadinstitute.org
---
# staging
spring.config.activate.on-profile: staging
drshub:
  compactIdHosts:
    "drs.anv0": data.staging.envs-terra.bio
    "dg.anv0": data.staging.envs-terra.bio
---
# alpha
spring.config.activate.on-profile: alpha
drshub:
  compactIdHosts:
    "drs.anv0": data.alpha.envs-terra.bio
    "dg.anv0": data.alpha.envs-terra.bio
